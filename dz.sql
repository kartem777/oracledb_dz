CREATE TABLE authors (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    birth_year NUMBER(4),
    country VARCHAR2(100)
);

CREATE TABLE books (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(200) NOT NULL,
    publication_year NUMBER(4),
    author_id NUMBER,
    CONSTRAINT fk_author FOREIGN KEY (author_id) REFERENCES authors(id)
);

ALTER TABLE books ADD genre VARCHAR2(50);

INSERT INTO authors (name, birth_year, country)
VALUES ('A', 1965, 'United Kingdom');

INSERT INTO authors (name, birth_year, country)
VALUES ('B', 1948, 'United States');

INSERT INTO authors (name, birth_year, country)
VALUES ('C', 1892, 'United Kingdom');

INSERT INTO authors (name, birth_year, country)
VALUES ('D', 1890, 'United Kingdom');

INSERT INTO authors (name, birth_year, country)
VALUES ('E', 1835, 'United States');


INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('e', 1997, 1, 'Fantasy');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('ee', 1996, 2, 'Fantasy');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('eee', 1954, 3, 'Fantasy');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('u', 1934, 4, 'Mystery');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('i', 1876, 5, 'Adventure');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('o', 1998, 1, 'Fantasy');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('a', 1998, 2, 'Fantasy');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('aa', 1954, 3, 'Fantasy');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('aaa', 1939, 4, 'Mystery');

INSERT INTO books (title, publication_year, author_id, genre)
VALUES ('aaaa', 1881, 5, 'Adventure');

UPDATE authors
SET country = 'UKRAINE'
WHERE id = 5;

SELECT b.title AS book_title, a.name AS author_name
FROM books b
JOIN authors a ON b.author_id = a.id;

SELECT a.name AS author_name, COUNT(b.id) AS book_count
FROM authors a
LEFT JOIN books b ON a.id = b.author_id
GROUP BY a.name;

SELECT a.name AS author_name, COUNT(b.id) AS book_count
FROM authors a
LEFT JOIN books b ON a.id = b.author_id
GROUP BY a.name
HAVING COUNT(b.id) > 2;

SELECT a.id AS author_id,
a.name AS author_name,
a.birth_year,
a.country,
COUNT(b.id) AS book_count
FROM authors a
LEFT JOIN books b ON a.id = b.author_id
GROUP BY a.id, a.name, a.birth_year, a.country;
CREATE OR REPLACE FUNCTION get_average_publication_year(author_id IN NUMBER) 
RETURN NUMBER IS
    avg_year NUMBER;
BEGIN
    SELECT AVG(publication_year)
    INTO avg_year
    FROM books
    WHERE author_id = author_id;

    RETURN avg_year;
END;
/
SELECT get_average_publication_year(1) FROM dual;

CREATE OR REPLACE PROCEDURE add_book_and_update_author (
    p_title IN VARCHAR2,
    p_publication_year IN NUMBER,
    p_author_id IN NUMBER,
    p_genre IN VARCHAR2
) AS
    avg_year NUMBER;
BEGIN
    INSERT INTO books (title, publication_year, author_id, genre)
    VALUES (p_title, p_publication_year, p_author_id, p_genre);
    SELECT AVG(publication_year)
    INTO avg_year
    FROM books
    WHERE author_id = p_author_id;
    UPDATE authors
    SET birth_year = avg_year
    WHERE id = p_author_id;
END;
/
EXECUTE add_book_and_update_author('F', 2023, 2, 'Science Fiction');
